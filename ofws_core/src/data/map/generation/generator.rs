use crate::data::generator2d::Generator2d;
use crate::data::map::generation::GenerationStep;
use crate::data::map::Map2d;

/// Adds the values generated by a [`Generator`] to an [`Attribute`].
pub struct AddGeneratorStep {
    name: String,
    attribute_id: usize,
    generator: Box<dyn Generator2d>,
}

impl AddGeneratorStep {
    pub fn new<S: Into<String>>(
        name: S,
        attribute_id: usize,
        generator: Box<dyn Generator2d>,
    ) -> AddGeneratorStep {
        AddGeneratorStep {
            name: name.into(),
            attribute_id,
            generator,
        }
    }
}

impl GenerationStep for AddGeneratorStep {
    // Runs the step.
    ///
    /// ```
    ///# use ofws_core::data::generator2d::IndexGenerator;
    ///# use ofws_core::data::map::Map2d;
    ///# use ofws_core::data::map::generation::generator::AddGeneratorStep;
    ///# use ofws_core::data::map::generation::GenerationStep;
    ///# use ofws_core::data::size2d::Size2d;
    /// let size = Size2d::new(2, 3);
    /// let mut map = Map2d::new(size);
    /// let attribute_id = map.create_attribute("elevation", 40).unwrap();
    /// let generator = Box::new(IndexGenerator::new(size));
    /// let step = AddGeneratorStep::new("test", attribute_id, generator);
    ///
    /// step.run(&mut map);
    ///
    /// let attribute = map.get_attribute(attribute_id);
    /// assert_eq!(attribute.get_all(), &vec![40u8, 41, 42, 43, 44, 45]);
    /// ```
    fn run(&self, map: &mut Map2d) {
        info!(
            "Add '{}' to attribute '{}' of map '{}'",
            self.name,
            map.get_attribute(self.attribute_id).get_name(),
            map.get_name()
        );

        let size = map.size;
        let attribute = map.get_attribute_mut(self.attribute_id);
        let mut index = 0;

        for y in 0..size.height() {
            for x in 0..size.width() {
                let value = self.generator.generate(x, y);
                let sum = attribute.get(index).saturating_add(value);
                *attribute.get_mut(index) = sum;
                index += 1;
            }
        }
    }
}
